{"version":3,"file":"01-timer.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst picker = document.querySelector('input#datetime-picker');\nconst button = document.querySelector('button');\nconst outputDays = document.querySelector('span[data-days]');\nconst outputHours = document.querySelector('span[data-hours]');\nconst outputMinutes = document.querySelector('span[data-minutes]');\nconst outputSeconds = document.querySelector('span[data-seconds]');\n\nbutton.disabled = true;\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (Date.now() > selectedDates[0].getTime()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n      userSelectedDate = selectedDates[0].getTime();\n    }\n  },\n};\n\nflatpickr(picker, options);\nconst padded = value => value.toString().padStart(2, '0');\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  picker.disabled = true;\n  const interval = setInterval(() => {\n    const remainingMs = userSelectedDate - Date.now();\n    outputDays.textContent = padded(convertMs(remainingMs).days);\n    outputHours.textContent = padded(convertMs(remainingMs).hours);\n    outputMinutes.textContent = padded(convertMs(remainingMs).minutes);\n    outputSeconds.textContent = padded(convertMs(remainingMs).seconds);\n    if (remainingMs < 500) {\n      clearInterval(interval);\n      button.disabled = false;\n      picker.disabled = false;\n      console.log('Boom, times up!');\n    }\n  }, 500);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["picker","button","outputDays","outputHours","outputMinutes","outputSeconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","padded","value","interval","remainingMs","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2FAKA,MAAMA,EAAS,SAAS,cAAc,uBAAuB,EACvDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAa,SAAS,cAAc,iBAAiB,EACrDC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAgB,SAAS,cAAc,oBAAoB,EAC3DC,EAAgB,SAAS,cAAc,oBAAoB,EAEjEJ,EAAO,SAAW,GAClB,IAAIK,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjB,KAAK,IAAK,EAAGA,EAAc,CAAC,EAAE,WAChCC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDR,EAAO,SAAW,KAElBA,EAAO,SAAW,GAClBK,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAE9C,CACH,EAEAE,EAAUV,EAAQO,CAAO,EACzB,MAAMI,EAASC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACxDX,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBD,EAAO,SAAW,GAClB,MAAMa,EAAW,YAAY,IAAM,CACjC,MAAMC,EAAcR,EAAmB,KAAK,IAAG,EAC/CJ,EAAW,YAAcS,EAAOI,EAAUD,CAAW,EAAE,IAAI,EAC3DX,EAAY,YAAcQ,EAAOI,EAAUD,CAAW,EAAE,KAAK,EAC7DV,EAAc,YAAcO,EAAOI,EAAUD,CAAW,EAAE,OAAO,EACjET,EAAc,YAAcM,EAAOI,EAAUD,CAAW,EAAE,OAAO,EAC7DA,EAAc,MAChB,cAAcD,CAAQ,EACtBZ,EAAO,SAAW,GAClBD,EAAO,SAAW,GAClB,QAAQ,IAAI,iBAAiB,EAEhC,EAAE,GAAG,CACR,CAAC,EAED,SAASe,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}